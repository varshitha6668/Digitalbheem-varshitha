import java.util.*;

class User {
    private String username;
    private String password;
    private List<Booking> bookings;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
        this.bookings = new ArrayList<>();
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    public List<Booking> getBookings() {
        return bookings;
    }
}

class Movie {
    private String title;
    private String description;
    private Date showtime;
    private int availableSeats;
    private double price;

    public Movie(String title, String description, Date showtime, int availableSeats, double price) {
        this.title = title;
        this.description = description;
        this.showtime = showtime;
        this.availableSeats = availableSeats;
        this.price = price;
    }

    public String getTitle() {
        return title;
    }

    public Date getShowtime() {
        return showtime;
    }

    public int getAvailableSeats() {
        return availableSeats;
    }

    public void setAvailableSeats(int availableSeats) {
        this.availableSeats = availableSeats;
    }

    public double getPrice() {
        return price;
    }
}

class Booking {
    private Movie movie;
    private Date bookingTime;
    private int quantity;

    public Booking(Movie movie, Date bookingTime, int quantity) {
        this.movie = movie;
        this.bookingTime = bookingTime;
        this.quantity = quantity;
    }

    public Movie getMovie() {
        return movie;
    }

    public Date getBookingTime() {
        return bookingTime;
    }

    public int getQuantity() {
        return quantity;
    }
}

class MovieTicketBookingSystem {
    private List<Movie> movies;
    private List<User> users;
    private Scanner scanner;

    public MovieTicketBookingSystem() {
        this.movies = new ArrayList<>();
        this.users = new ArrayList<>();
        this.scanner = new Scanner(System.in);
    }

    public void registerUser() {
        System.out.println("User Registration");
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        users.add(new User(username, password));
        System.out.println("Registration successful!");
    }

    public User loginUser() {
        System.out.println("User Login");
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        for (User user : users) {
            if (user.getUsername().equals(username) && user.getPassword().equals(password)) {
                System.out.println("Login successful!");
                return user;
            }
        }
        System.out.println("Invalid username or password.");
        return null;
    }

    public void displayMovieListings() {
        System.out.println("Movie Listings:");
        for (Movie movie : movies) {
            System.out.println(movie.getTitle() + " - " + movie.getShowtime() + " - " + movie.getAvailableSeats() + " seats available");
        }
    }

    public void bookTicket(User user) {
        System.out.println("Booking Ticket");
        System.out.println("Select a movie:");
        displayMovieListings();
        System.out.print("Enter movie title: ");
        String movieTitle = scanner.nextLine();
        System.out.print("Enter quantity: ");
        int quantity = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        for (Movie movie : movies) {
            if (movie.getTitle().equals(movieTitle)) {
                if (movie.getAvailableSeats() >= quantity) {
                    movie.setAvailableSeats(movie.getAvailableSeats() - quantity);
                    user.getBookings().add(new Booking(movie, new Date(), quantity));
                    System.out.println("Ticket booked successfully!");
                } else {
                    System.out.println("Not enough seats available for selected movie.");
                }
                return;
            }
        }
        System.out.println("Movie not found.");
    }

    public void displayBookingHistory(User user) {
        System.out.println("Booking History for " + user.getUsername() + ":");
        List<Booking> bookings = user.getBookings();
        if (bookings.isEmpty()) {
            System.out.println("No bookings found.");
        } else {
            for (Booking booking : bookings) {
                System.out.println("Movie: " + booking.getMovie().getTitle() + ", Quantity: " + booking.getQuantity() + ", Time: " + booking.getBookingTime());
            }
        }
    }

    public void run() {
        boolean running = true;
        while (running) {
            System.out.println("\nMenu:");
            System.out.println("1. Register");
            System.out.println("2. Login");
            System.out.println("3. Display Movie Listings");
            System.out.println("4. Book Ticket");
            System.out.println("5. Display Booking History");
            System.out.println("6. Quit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            switch (choice) {
                case 1:
                    registerUser();
                    break;
                case 2:
                    User user = loginUser();
                    if (user != null) {
                        while (true) {
                            System.out.println("\nUser Menu:");
                            System.out.println("1. Display Movie Listings");
                            System.out.println("2. Book Ticket");
                            System.out.println("3. Display Booking History");
                            System.out.println("4. Logout");
                            System.out.print("Enter your choice: ");
                            int userChoice = scanner.nextInt();
                            scanner.nextLine(); // Consume newline
                            switch (userChoice) {
                                case 1:
                                    displayMovieListings();
                                    break;
                                case 2:
                                    bookTicket(user);
                                    break;
                                case 3:
                                    displayBookingHistory(user);
                                    break;
                                case 4:
                                    System.out.println("Logged out.");
                                    break;
                                default:
                                    System.out.println("Invalid choice.");
                            }
                            if (userChoice == 4) {
                                break;
                            }
                        }
                    }
                    break;
                case 6:
                    running = false;
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        }
        scanner.close();
    }
}

public class Main {
    public static void main(String[] args) {
        MovieTicketBookingSystem bookingSystem = new MovieTicketBookingSystem();
        bookingSystem.run();
    }
}
